version: '3.3'

services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app_db
    # Optional:: for more verbose logs for debugging
    command: [ "postgres", "-c", "log_statement=all" ]

    ports:
      - "5500:5432"

  redis:
    image: redis:latest

  app:
    build: .
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres/app_db
      # The pipe indicates that this variable contains multiline values
      - |
        ROCKET_DATABASES={
          postgres={url=postgres://postgres:postgres@postgres/app_db},
          redis={url=redis://redis:6379}
        }

      # Mailing server credentials
      - SMTP_HOST=smtp.gmail.com
      - SMTP_USERNAME=stackmewbie@gmail.com
      - SMTP_PASSWORD=XXXXXXXX
    ports:
      - "8000:8000"
    volumes:
      - ./:/app



# Testing the endpoints<Manual>:: docker-compose exec app curl -X POST 127.0.0.1:8000/rustaceans -H "Content-Type: application/json" -d '{"name": "john doe", "email": "johndoe@test.com"}'
# Specify the binary to run<no_longer_necessary>::docker-compose exec app cargo run --bin server
# Run the cli::docker-compose exec app cargo run --bin cli
# Testing the endpoints:: docker-compose exec app cargo test
# Note:: This appears to only work when using git bash on Windows

# Interacting with the cli::
# -- Add a user --
# docker-compose exec app cargo run --bin cli users create admin mysecurepassword admin

# Sending emails
# docker-compose exec app cargo run --bin cli digest-send <your_email_address> duration e.g 24